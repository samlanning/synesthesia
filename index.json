{
  "index.html": {
    "href": "index.html",
    "title": "Synesthesia Project | Synesthesia Project",
    "keywords": "Synesthesia Project Synesthesia is a lighting & Sound project. A 5 minute lightning talk of the project can be found here: https://www.youtube.com/watch?v=egsswPi8yio This project is very much a work-in-progress Demo Videos Live Test 1 - Jul 23, 2017 Live Test 2 - Apr 28, 2018 GitHub Repository Twitter: @SynesthesiaOSS Api Documentation"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "PreciseAudio | Synesthesia Project",
    "keywords": "PreciseAudio A browser-based API for more precise playback, scrubbing/seeking and timestamp functionality."
  },
  "api/precise-audio/PreciseAudioEvent.html": {
    "href": "api/precise-audio/PreciseAudioEvent.html",
    "title": "Class PreciseAudioEvent | Synesthesia Project",
    "keywords": "Class PreciseAudioEvent An event triggered by a PreciseAudio object. Package : @synesthesia-project/precise-audio Constructors PreciseAudioEvent(EventTypes, PreciseAudio) Declaration new PreciseAudioEvent(eventType: EventTypes, target: PreciseAudio) Parameters Type Name Description EventTypes eventType PreciseAudio target Properties AT_TARGET Declaration AT_TARGET: number Property Value Type Description number bubbles Returns true or false depending on how event was initialized. True if event goes through its target's ancestors in reverse tree order, and false otherwise. Declaration bubbles: boolean Property Value Type Description boolean BUBBLING_PHASE Declaration BUBBLING_PHASE: number Property Value Type Description number cancelable Returns true or false depending on how event was initialized. Its return value does not always carry meaning, but true can indicate that part of the operation during which event was dispatched, can be canceled by invoking the preventDefault() method. Declaration cancelable: boolean Property Value Type Description boolean cancelBubble Declaration cancelBubble: boolean Property Value Type Description boolean CAPTURING_PHASE Declaration CAPTURING_PHASE: number Property Value Type Description number composed Returns true or false depending on how event was initialized. True if event invokes listeners past a ShadowRoot node that is the root of its target, and false otherwise. Declaration composed: boolean Property Value Type Description boolean currentTarget Declaration PreciseAudio currentTarget Property Value Type Description PreciseAudio defaultPrevented Returns true if preventDefault() was invoked successfully to indicate cancelation, and false otherwise. Declaration defaultPrevented: boolean Property Value Type Description boolean Event Declaration static Event: Object Property Value Type Description Object eventPhase Returns the event's phase, which is one of NONE, CAPTURING_PHASE, AT_TARGET, and BUBBLING_PHASE. Declaration eventPhase: number Property Value Type Description number isTrusted Returns true if event was dispatched by the user agent, and false otherwise. Declaration isTrusted: boolean Property Value Type Description boolean NONE Declaration NONE: number Property Value Type Description number returnValue Declaration returnValue: boolean Property Value Type Description boolean srcElement Declaration srcElement: EventTarget | null Property Value Type Description EventTarget | null target Declaration PreciseAudio target Property Value Type Description PreciseAudio timeStamp Returns the event's timestamp as the number of milliseconds measured relative to the time origin. Declaration timeStamp: number Property Value Type Description number type Returns the type of event, e.g. \"click\", \"hashchange\", or \"submit\". Declaration type: string Property Value Type Description string Methods composedPath() Returns the invocation target objects of event's path (objects on which listeners will be invoked), except for any nodes in shadow trees of which the shadow root's mode is \"closed\" that are not reachable from event's currentTarget. Declaration function composedPath() Returns Type Description EventTarget [] initEvent(string, boolean, boolean) Declaration function initEvent(type: string, bubbles?: boolean, cancelable?: boolean) Parameters Type Name Description string type boolean bubbles boolean cancelable preventDefault() If invoked when the cancelable attribute value is true, and while executing a listener for the event with passive set to false, signals to the operation that caused event to be dispatched that it needs to be canceled. Declaration function preventDefault() stopImmediatePropagation() Invoking this method prevents event from reaching any registered event listeners after the current one finishes running and, when dispatched in a tree, also prevents event from reaching any other objects. Declaration function stopImmediatePropagation() stopPropagation() When dispatched in a tree, invoking this method prevents event from reaching any objects other than the current object. Declaration function stopPropagation()"
  },
  "api/precise-audio/index.html": {
    "href": "api/precise-audio/index.html",
    "title": "Package @synesthesia-project/precise-audio | Synesthesia Project",
    "keywords": "Package @synesthesia-project/precise-audio Classes PreciseAudio An audio player that can seek and provide timestamps with millisecond accuracy. In contrast to the <audio> tag, this class will load an entire track into memory as a raw waveform, as otherwise, with most codecs, it's impossible to seek to accurate locations in songs. ExampleUsage: import PreciseAudio from '@synesthesia-project/precise-audio'; const audio = new PreciseAudio(); audio.loadAudioFile(...); PreciseAudioEvent An event triggered by a PreciseAudio object."
  },
  "api/precise-audio/PreciseAudio.html": {
    "href": "api/precise-audio/PreciseAudio.html",
    "title": "Class PreciseAudio | Synesthesia Project",
    "keywords": "Class PreciseAudio An audio player that can seek and provide timestamps with millisecond accuracy. In contrast to the <audio> tag, this class will load an entire track into memory as a raw waveform, as otherwise, with most codecs, it's impossible to seek to accurate locations in songs. ExampleUsage: import PreciseAudio from '@synesthesia-project/precise-audio'; const audio = new PreciseAudio(); audio.loadAudioFile(...); Package : @synesthesia-project/precise-audio Properties currentTime The current playback time in seconds If the media is not yet playing, the value of currentTime indicates the time position within the track at which playback will begin once the play() method is called. Declaration number currentTime Property Value Type Description number The current playback time in seconds currentTimeMillis Similar to currentTime , but returns the time in milliseconds rather than seconds. Declaration number currentTimeMillis Property Value Type Description number The current playback time in milliseconds duration Declaration number duration Property Value Type Description number The length of the currently loaded audio track in seconds durationMillis Declaration number durationMillis Property Value Type Description number The length of the currently loaded audio track in milliseconds EventTarget Declaration static EventTarget: Object Property Value Type Description Object paused Declaration boolean paused Property Value Type Description boolean a boolean that indicates whether the audio element is paused. playbackRate Declaration number playbackRate Property Value Type Description number a number indicating the rate at which the media is being played back. Methods addEventListener(\"pause\", Listener) Fired when the audio is paused (Notably not fired when the audio is stopped when a new file is being loaded) Declaration function addEventListener(event: \"pause\", listener: Listener) Parameters Type Name Description \"pause\" event Listener listener an EventListener that expects a PreciseAudioEvent as a parameter addEventListener(\"playing\", Listener) Fired when the audio starts playing Declaration function addEventListener(event: \"playing\", listener: Listener) Parameters Type Name Description \"playing\" event Listener listener an EventListener that expects a PreciseAudioEvent as a parameter addEventListener(\"seeked\", Listener) Fired when a seek operation completes Declaration function addEventListener(event: \"seeked\", listener: Listener) Parameters Type Name Description \"seeked\" event Listener listener an EventListener that expects a PreciseAudioEvent as a parameter dispatchEvent(Event) Dispatches a synthetic event event to target and returns true if either event's cancelable attribute value is false or its preventDefault() method was not invoked, and false otherwise. Declaration function dispatchEvent(event: Event) Parameters Type Name Description Event event Returns Type Description boolean loadAudioFile(File) Read and load a new audio file. The loaded audio file will be paused once it's loaded, and will not play automatically. Declaration function loadAudioFile(file: File) Parameters Type Name Description File file A File object representing the audio file to be played, generally retrieved from a FileList object. Returns Type Description Promise<void> A Promise that resolves once the audio file has been successfully loaded. pause() Pauses the audio playback. Declaration function pause() play() Begins playback of the audio. Declaration function play() removeEventListener(EventTypes, Listener) Declaration function removeEventListener(event: EventTypes, listener: Listener) Parameters Type Name Description EventTypes event Listener listener"
  }
}